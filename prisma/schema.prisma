generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int           @id @default(autoincrement())
  email      String        @unique
  password   String        @db.VarChar(255)
  name       String        @db.VarChar(255)
  role       String        @default("USER")
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  reservations Reservation[]
}

model Reservation {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @updatedAt @db.Timestamp(6)
  userId      Int
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  dateStart   DateTime  
  dateEnd     DateTime  
  startTime   String
  endTime     String
  status      Int?  @default(1)
  type        Int  
  purpose     String    @db.Text

  materials   ReservationMaterial[]
}

model Material {
  id          Int          @id @default(autoincrement())
  type        Int          @db.Integer
  title       String       @db.VarChar(255)
  createdAt   DateTime     @default(now()) @db.Timestamp(6)
  updatedAt   DateTime     @updatedAt @db.Timestamp(6)
  description String       @db.Text
  disponible  Boolean      @default(false) @db.Boolean  
  quantity    Int          @default(0) @db.Integer      

  reservations ReservationMaterial[]
}

model ReservationMaterial {
  id           Int         @id @default(autoincrement())
  reservationId Int
  materialId   Int

  reservation Reservation @relation(fields: [reservationId], references: [id], onDelete: Cascade)
  material    Material    @relation(fields: [materialId], references: [id], onDelete: Cascade)

  @@unique([reservationId, materialId])
}

model Link {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  description String    @db.Text
  link        String    @db.Text
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @updatedAt @db.Timestamp(6)
}

model Post {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @updatedAt @db.Timestamp(6)
  title       String    @db.VarChar(200)
  description String    @db.Text
  projectId   Int       
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Project {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @updatedAt @db.Timestamp(6)
  title       String    @db.VarChar(200)
  description String    @db.Text
  posts       Post[]    
}
